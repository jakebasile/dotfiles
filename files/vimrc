" Jake Basile's .vimrc
"
" install plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" install plugins
call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'arcticicestudio/nord-vim'
Plug 'bhurlow/vim-parinfer'
Plug 'guns/vim-sexp'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'liquidz/vim-iced', {'for': 'clojure'}
Plug 'liquidz/vim-iced-asyncomplete', {'for': 'clojure'}
Plug 'luochen1990/rainbow'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'preservim/tagbar'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'

call plug#end()

set nocompatible
set backspace=2
set visualbell
set clipboard=unnamed

syntax on
filetype indent plugin on

" Colors

color nord
hi Comment ctermfg=13
let g:airline_theme="nord"
let g:airline#exenstions#tagbar#enabled=1
"set t_ut=
let g:rainbow_active = 1

" Filetypes

augroup filetypedetect
    au! BufRead,BufNewFile *.cls setfiletype tex
    au! BufRead,BufNewFile *.lco setfiletype tex
    au! BufRead,BufNewFile *.dot setfiletype dot
    au! BufRead,BufNewFile *.clj setfiletype clojure
    au! BufRead,BufNewFile *.cljs setfiletype clojure
    au! BufRead,BufNewFile *.html setfiletype html
    au! BufRead,BufNewFile *.htm setfiletype htm
    au! BufRead,BufNewFile *.md setfiletype markdown
    au! BufRead,BufNewFile *.yaml setfiletype yaml
augroup END
autocmd FileType clojure setlocal shiftwidth=2
autocmd FileType clojure setlocal tabstop=2
autocmd FileType clojure setlocal softtabstop=2
autocmd FileType html setlocal shiftwidth=2
autocmd FileType html setlocal tabstop=2
autocmd FileType html setlocal softtabstop=2
autocmd FileType coffee setlocal shiftwidth=2
autocmd FileType coffee setlocal tabstop=2
autocmd FileType coffee setlocal softtabstop=2
autocmd FileType go setlocal noexpandtab
autocmd FileType yaml setlocal shiftwidth=2
autocmd FileType yaml setlocal tabstop=2
autocmd FileType yaml setlocal softtabstop=2

" Make backup directory less annoying

set directory=~/.vimbackups//
set backupdir=~/.vimbackups//

" Misc

set cpt-=t
set nocompatible
set autoread
set laststatus=2
set encoding=utf-8
let html_no_rendering=1
set ruler
set number
set numberwidth=3
set tabstop=2
set expandtab
set shiftwidth=2
set softtabstop=2
set autoindent
set cursorline
set scrolloff=5
set wildignore+=*.pyc,.git/*
set nohlsearch
set noshowmode

" SQL
let g:sql_type_default = 'pgsql'

" Go
let g:go_def_mapping_enabled=0

" Clojure
let g:iced_enable_default_key_mappings = v:true

" GUI Options

set guifont=IBM\ Plex\ Mono:h14
set guioptions=egmt
set guioptions-=rl
set guioptions-=RL
set mouse=

" closetag
let g:closetag_filenames = "*.html,*.js"

" Tagbar

let g:tagbar_autoclose=1
let g:tagbar_autofocus=1

" NERDTree

let NERDTreeIgnore = ['\.pyc$', '\.rdb$','\.egg-info', 'dist', 'target']
let NERDTreeQuitOnOpen = 1
let NERDTreeDirArrows = 0

" asynccomplete.vim

inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"

" Bindings
map <C-s> :set spell! spelllang=en_us<CR>
map <C-t> :NERDTreeTabsToggle<CR>
map <C-d> :TagbarToggle<CR>
nmap U <C-r>
nmap <C-V> "+gP
imap <C-V> <ESC>"+gPi
vmap <C-C> "+y
" Tab Movement
nmap <A-1> 1gt
nmap <A-2> 2gt
nmap <A-3> 3gt
nmap <A-4> 4gt
nmap <A-5> 5gt
nmap <A-6> 6gt
nmap <A-7> 7gt
nmap <A-8> 8gt
nmap <A-9> 9gt

nmap <C-p> :Files<CR>

map <C-i> :IndentGuidesToggle<CR>
"nnoremap <Space> @q

set timeout timeoutlen=3000 ttimeoutlen=100

nnoremap <SPACE> <Nop>
map <Space> <Leader>
" inoremap ,, <C-x><C-x>
" let g:iced_default_key_mapping_leader = 'z'

"vi: ft=vim
